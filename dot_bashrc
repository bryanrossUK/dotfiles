###############################################################################
# Initialise Software
###############################################################################

# Launch Starship (custom command prompt)
eval "$(starship init bash)"

# Initialise acme.sh (certificate management)
#source $HOME/.acme.sh/acme.sh.env


###############################################################################
# Aliases
###############################################################################

# cd aliases you'll forget
alias ..="cd .."

# do you ever mean actual 'ls'?
if command -v eza &> /dev/null; then
  alias ls="eza --long --icons -aa --header --group-directories-first --git --time-style=long-iso"
  alias ll="eza --long --icons -aa --header --group-directories-first --git --time-style=long-iso"
fi

# du / df more human
alias du="command du -d 1 -h"
alias df="command df -h"

# Bat brings a few colourful themes
export BAT_THEME="Visual Studio Dark+"

# Bat is better than cat
if command -v bat &> /dev/null; then
  alias cat='bat --paging=never --style=header,grid'
  alias less='bat --style=header,grid'
else
  # Repaint the screen, discarding any buffered input.  That is, reload the current
  # file.  Useful if the file is changing while it is being viewed.
  alias less='less -R'
fi

# Bat is also a pretty good grep (although not 100% compatible)
if command -v bat &> /dev/null; then
  alias grep='batgrep'
else
  alias grep='command grep -R -H -n --color=auto --exclude-dir={.git,.svn,CVS} $@ 2>/dev/null'
fi

# Bat comes with some other extras too
if command -v batdiff  &> /dev/null; then alias diff='batdiff --paging=never'; fi
if command -v batwatch &> /dev/null; then alias watch='batwatch'; fi
if command -v batman   &> /dev/null; then alias man='batman'; fi

# Dog is a better dig
if command -v dog &> /dev/null; then alias dig='dog'; fi

# bpytop is top turned up to 11
if command -v bpytop &> /dev/null; then alias top='bpytop'; fi

# make chezmoi a little more usable
if command -v chezmoi &> /dev/null; then
  function chezmoi() {
    case $1 in
      cd     ) cd $(command chezmoi source-path) ;;                # stop launching a new shell
      pull   ) command chezmoi git pull -- --autostash --rebase ;; # pull updates, but dont apply them
      commit ) command chezmoi git -- commit ${@:2} && \
               command chezmoi git -- push ;;                      # commit changes and push them
      push   ) command chezmoi git -- push ${@:2} ;;               # push changes
      *      ) command chezmoi "$@" ;;                             # let chezmoi do its thing
    esac
  }
fi
